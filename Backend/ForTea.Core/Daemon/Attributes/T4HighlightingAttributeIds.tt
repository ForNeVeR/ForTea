<#@ template language="C#" #>
<#@ output extension=".cs" encoding="utf-8" #>
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
<#@ include file="$(T4UtilsLocation)T4StringUtils.ttinclude" #>
<#
    const string className = "T4HighlightingAttributeIds";
    var names = new[]
    {
	    "macro",
	    "environment variable",
	    "raw attribute value",
	    "directive",
	    "directive attribute"
    };
    var attributes = new[]
    {
	    "keyword",
	    "number",
	    "string",
	    "keyword",
	    "constant identifier attribute"
    };
#>
using GammaJul.ForTea.Core.Daemon.Attributes;
using JetBrains.ReSharper.Feature.Services.Daemon;
using JetBrains.TextControl.DocumentMarkup;

[assembly: RegisterHighlighterGroup(
	<#= className #>.T4,
	<#= className #>.T4,
	HighlighterGroupPriority.LANGUAGE_SETTINGS,
	DemoText = "\<#@ <T4_DIRECTIVE>assembly</T4_DIRECTIVE> <T4_DIRECTIVE_ATTRIBUTE>name</T4_DIRECTIVE_ATTRIBUTE>=\"<T4_ATTRIBUTE_VALUE>$(</T4_ATTRIBUTE_VALUE><T4_MACRO_VALUE>SolutionDir</T4_MACRO_VALUE><T4_ATTRIBUTE_VALUE>)/%</T4_ATTRIBUTE_VALUE><T4_ENVIRONMENT_VARIABLE>USERNAME</T4_ENVIRONMENT_VARIABLE><T4_ATTRIBUTE_VALUE>%<T4_ATTRIBUTE_VALUE>/Foo.dll</T4_ATTRIBUTE_VALUE>\"#>"
)]
<#
    foreach (var data in names.Zip(attributes, (name, attribute) => new {name, attribute}))
    {
#>
[assembly: RegisterHighlighter(
    <#= className #>.<#= ToConstantIdentifier(data.name) #>,
    EffectType = EffectType.TEXT,
    GroupId = <#= className #>.T4,
    FallbackAttributeId = HighlightingAttributeIds.<#= ToConstantIdentifier(data.attribute) #>
)]
<#
    }
#>

namespace GammaJul.ForTea.Core.Daemon.Attributes
{
	public static class <#= className #>
	{
		public const string T4 = "T4";
<#
    foreach (string name in names)
    {
#>
		public const string <#= ToConstantIdentifier(name) #> = "<#= ToPrintable(name) #>";
<#
    }
#>
	}
}
